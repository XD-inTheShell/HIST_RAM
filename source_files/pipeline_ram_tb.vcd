$date
	Tue Aug  2 14:51:20 2022
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module pipeline_ram_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # ram_en $end
$var reg 1 $ use_JTAG $end
$var reg 5 % addr_r [4:0] $end
$var reg 32 & cyc_count [31:0] $end

$scope module dut $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 1 ) addr_r [4] $end
$var wire 1 * addr_r [3] $end
$var wire 1 + addr_r [2] $end
$var wire 1 , addr_r [1] $end
$var wire 1 - addr_r [0] $end
$var wire 1 . ram_en $end
$var wire 1 / use_JTAG $end
$var wire 1 0 m_addr [31] $end
$var wire 1 1 m_addr [30] $end
$var wire 1 2 m_addr [29] $end
$var wire 1 3 m_addr [28] $end
$var wire 1 4 m_addr [27] $end
$var wire 1 5 m_addr [26] $end
$var wire 1 6 m_addr [25] $end
$var wire 1 7 m_addr [24] $end
$var wire 1 8 m_addr [23] $end
$var wire 1 9 m_addr [22] $end
$var wire 1 : m_addr [21] $end
$var wire 1 ; m_addr [20] $end
$var wire 1 < m_addr [19] $end
$var wire 1 = m_addr [18] $end
$var wire 1 > m_addr [17] $end
$var wire 1 ? m_addr [16] $end
$var wire 1 @ m_addr [15] $end
$var wire 1 A m_addr [14] $end
$var wire 1 B m_addr [13] $end
$var wire 1 C m_addr [12] $end
$var wire 1 D m_addr [11] $end
$var wire 1 E m_addr [10] $end
$var wire 1 F m_addr [9] $end
$var wire 1 G m_addr [8] $end
$var wire 1 H m_addr [7] $end
$var wire 1 I m_addr [6] $end
$var wire 1 J m_addr [5] $end
$var wire 1 K m_addr [4] $end
$var wire 1 L m_addr [3] $end
$var wire 1 M m_addr [2] $end
$var wire 1 N m_addr [1] $end
$var wire 1 O m_addr [0] $end
$var reg 32 P s_readdata [31:0] $end
$var wire 1 Q m_write $end
$var wire 1 R m_writedata [31] $end
$var wire 1 S m_writedata [30] $end
$var wire 1 T m_writedata [29] $end
$var wire 1 U m_writedata [28] $end
$var wire 1 V m_writedata [27] $end
$var wire 1 W m_writedata [26] $end
$var wire 1 X m_writedata [25] $end
$var wire 1 Y m_writedata [24] $end
$var wire 1 Z m_writedata [23] $end
$var wire 1 [ m_writedata [22] $end
$var wire 1 \ m_writedata [21] $end
$var wire 1 ] m_writedata [20] $end
$var wire 1 ^ m_writedata [19] $end
$var wire 1 _ m_writedata [18] $end
$var wire 1 ` m_writedata [17] $end
$var wire 1 a m_writedata [16] $end
$var wire 1 b m_writedata [15] $end
$var wire 1 c m_writedata [14] $end
$var wire 1 d m_writedata [13] $end
$var wire 1 e m_writedata [12] $end
$var wire 1 f m_writedata [11] $end
$var wire 1 g m_writedata [10] $end
$var wire 1 h m_writedata [9] $end
$var wire 1 i m_writedata [8] $end
$var wire 1 j m_writedata [7] $end
$var wire 1 k m_writedata [6] $end
$var wire 1 l m_writedata [5] $end
$var wire 1 m m_writedata [4] $end
$var wire 1 n m_writedata [3] $end
$var wire 1 o m_writedata [2] $end
$var wire 1 p m_writedata [1] $end
$var wire 1 q m_writedata [0] $end
$var reg 1 r s_readdatavalid $end
$var reg 5 s addr_b [4:0] $end
$var reg 5 t addr_w [4:0] $end
$var reg 1 u en_r $end
$var reg 1 v en_b $end
$var reg 1 w en_w $end
$var reg 32 x readdata [31:0] $end
$var reg 32 y hist_writedata [31:0] $end
$var reg 32 z readdata_fvalue [31:0] $end
$var reg 5 { hist_rdaddr [4:0] $end
$var reg 1 | wren $end
$var reg 5 } wraddr [4:0] $end
$var reg 5 ~ rdaddr [4:0] $end
$var reg 32 !! writedata [31:0] $end
$var reg 32 "! fw_value_b [31:0] $end
$var reg 32 #! fw_value_w [31:0] $end
$var reg 5 $! addr_prev0 [4:0] $end
$var reg 5 %! addr_prev1 [4:0] $end
$var reg 5 &! en_prev0 [4:0] $end
$var reg 5 '! en_prev1 [4:0] $end
$var reg 1 (! fw_rb $end
$var reg 1 )! fw_rw $end

$scope module u0 $end
$var wire 1 *! data [31] $end
$var wire 1 +! data [30] $end
$var wire 1 ,! data [29] $end
$var wire 1 -! data [28] $end
$var wire 1 .! data [27] $end
$var wire 1 /! data [26] $end
$var wire 1 0! data [25] $end
$var wire 1 1! data [24] $end
$var wire 1 2! data [23] $end
$var wire 1 3! data [22] $end
$var wire 1 4! data [21] $end
$var wire 1 5! data [20] $end
$var wire 1 6! data [19] $end
$var wire 1 7! data [18] $end
$var wire 1 8! data [17] $end
$var wire 1 9! data [16] $end
$var wire 1 :! data [15] $end
$var wire 1 ;! data [14] $end
$var wire 1 <! data [13] $end
$var wire 1 =! data [12] $end
$var wire 1 >! data [11] $end
$var wire 1 ?! data [10] $end
$var wire 1 @! data [9] $end
$var wire 1 A! data [8] $end
$var wire 1 B! data [7] $end
$var wire 1 C! data [6] $end
$var wire 1 D! data [5] $end
$var wire 1 E! data [4] $end
$var wire 1 F! data [3] $end
$var wire 1 G! data [2] $end
$var wire 1 H! data [1] $end
$var wire 1 I! data [0] $end
$var wire 1 J! q [31] $end
$var wire 1 K! q [30] $end
$var wire 1 L! q [29] $end
$var wire 1 M! q [28] $end
$var wire 1 N! q [27] $end
$var wire 1 O! q [26] $end
$var wire 1 P! q [25] $end
$var wire 1 Q! q [24] $end
$var wire 1 R! q [23] $end
$var wire 1 S! q [22] $end
$var wire 1 T! q [21] $end
$var wire 1 U! q [20] $end
$var wire 1 V! q [19] $end
$var wire 1 W! q [18] $end
$var wire 1 X! q [17] $end
$var wire 1 Y! q [16] $end
$var wire 1 Z! q [15] $end
$var wire 1 [! q [14] $end
$var wire 1 \! q [13] $end
$var wire 1 ]! q [12] $end
$var wire 1 ^! q [11] $end
$var wire 1 _! q [10] $end
$var wire 1 `! q [9] $end
$var wire 1 a! q [8] $end
$var wire 1 b! q [7] $end
$var wire 1 c! q [6] $end
$var wire 1 d! q [5] $end
$var wire 1 e! q [4] $end
$var wire 1 f! q [3] $end
$var wire 1 g! q [2] $end
$var wire 1 h! q [1] $end
$var wire 1 i! q [0] $end
$var wire 1 j! wraddress [4] $end
$var wire 1 k! wraddress [3] $end
$var wire 1 l! wraddress [2] $end
$var wire 1 m! wraddress [1] $end
$var wire 1 n! wraddress [0] $end
$var wire 1 o! rdaddress [4] $end
$var wire 1 p! rdaddress [3] $end
$var wire 1 q! rdaddress [2] $end
$var wire 1 r! rdaddress [1] $end
$var wire 1 s! rdaddress [0] $end
$var wire 1 t! wren $end
$var wire 1 ' clock $end

$scope module ram_2port_0 $end
$var tri1 1 ' clock $end
$var wire 1 *! data [31] $end
$var wire 1 +! data [30] $end
$var wire 1 ,! data [29] $end
$var wire 1 -! data [28] $end
$var wire 1 .! data [27] $end
$var wire 1 /! data [26] $end
$var wire 1 0! data [25] $end
$var wire 1 1! data [24] $end
$var wire 1 2! data [23] $end
$var wire 1 3! data [22] $end
$var wire 1 4! data [21] $end
$var wire 1 5! data [20] $end
$var wire 1 6! data [19] $end
$var wire 1 7! data [18] $end
$var wire 1 8! data [17] $end
$var wire 1 9! data [16] $end
$var wire 1 :! data [15] $end
$var wire 1 ;! data [14] $end
$var wire 1 <! data [13] $end
$var wire 1 =! data [12] $end
$var wire 1 >! data [11] $end
$var wire 1 ?! data [10] $end
$var wire 1 @! data [9] $end
$var wire 1 A! data [8] $end
$var wire 1 B! data [7] $end
$var wire 1 C! data [6] $end
$var wire 1 D! data [5] $end
$var wire 1 E! data [4] $end
$var wire 1 F! data [3] $end
$var wire 1 G! data [2] $end
$var wire 1 H! data [1] $end
$var wire 1 I! data [0] $end
$var wire 1 o! rdaddress [4] $end
$var wire 1 p! rdaddress [3] $end
$var wire 1 q! rdaddress [2] $end
$var wire 1 r! rdaddress [1] $end
$var wire 1 s! rdaddress [0] $end
$var wire 1 j! wraddress [4] $end
$var wire 1 k! wraddress [3] $end
$var wire 1 l! wraddress [2] $end
$var wire 1 m! wraddress [1] $end
$var wire 1 n! wraddress [0] $end
$var tri0 1 t! wren $end
$var wire 1 J! q [31] $end
$var wire 1 K! q [30] $end
$var wire 1 L! q [29] $end
$var wire 1 M! q [28] $end
$var wire 1 N! q [27] $end
$var wire 1 O! q [26] $end
$var wire 1 P! q [25] $end
$var wire 1 Q! q [24] $end
$var wire 1 R! q [23] $end
$var wire 1 S! q [22] $end
$var wire 1 T! q [21] $end
$var wire 1 U! q [20] $end
$var wire 1 V! q [19] $end
$var wire 1 W! q [18] $end
$var wire 1 X! q [17] $end
$var wire 1 Y! q [16] $end
$var wire 1 Z! q [15] $end
$var wire 1 [! q [14] $end
$var wire 1 \! q [13] $end
$var wire 1 ]! q [12] $end
$var wire 1 ^! q [11] $end
$var wire 1 _! q [10] $end
$var wire 1 `! q [9] $end
$var wire 1 a! q [8] $end
$var wire 1 b! q [7] $end
$var wire 1 c! q [6] $end
$var wire 1 d! q [5] $end
$var wire 1 e! q [4] $end
$var wire 1 f! q [3] $end
$var wire 1 g! q [2] $end
$var wire 1 h! q [1] $end
$var wire 1 i! q [0] $end
$var wire 1 u! sub_wire0 [31] $end
$var wire 1 v! sub_wire0 [30] $end
$var wire 1 w! sub_wire0 [29] $end
$var wire 1 x! sub_wire0 [28] $end
$var wire 1 y! sub_wire0 [27] $end
$var wire 1 z! sub_wire0 [26] $end
$var wire 1 {! sub_wire0 [25] $end
$var wire 1 |! sub_wire0 [24] $end
$var wire 1 }! sub_wire0 [23] $end
$var wire 1 ~! sub_wire0 [22] $end
$var wire 1 !" sub_wire0 [21] $end
$var wire 1 "" sub_wire0 [20] $end
$var wire 1 #" sub_wire0 [19] $end
$var wire 1 $" sub_wire0 [18] $end
$var wire 1 %" sub_wire0 [17] $end
$var wire 1 &" sub_wire0 [16] $end
$var wire 1 '" sub_wire0 [15] $end
$var wire 1 (" sub_wire0 [14] $end
$var wire 1 )" sub_wire0 [13] $end
$var wire 1 *" sub_wire0 [12] $end
$var wire 1 +" sub_wire0 [11] $end
$var wire 1 ," sub_wire0 [10] $end
$var wire 1 -" sub_wire0 [9] $end
$var wire 1 ." sub_wire0 [8] $end
$var wire 1 /" sub_wire0 [7] $end
$var wire 1 0" sub_wire0 [6] $end
$var wire 1 1" sub_wire0 [5] $end
$var wire 1 2" sub_wire0 [4] $end
$var wire 1 3" sub_wire0 [3] $end
$var wire 1 4" sub_wire0 [2] $end
$var wire 1 5" sub_wire0 [1] $end
$var wire 1 6" sub_wire0 [0] $end

$scope module altera_syncram_component $end
$var parameter 32 7" width_a $end
$var parameter 32 8" widthad_a $end
$var parameter 32 9" widthad2_a $end
$var parameter 32 :" numwords_a $end
$var parameter 96 ;" outdata_reg_a $end
$var parameter 32 <" address_aclr_a $end
$var parameter 32 =" outdata_aclr_a $end
$var parameter 32 >" width_byteena_a $end
$var parameter 32 ?" width_b $end
$var parameter 32 @" widthad_b $end
$var parameter 32 A" widthad2_b $end
$var parameter 32 B" numwords_b $end
$var parameter 48 C" rdcontrol_reg_b $end
$var parameter 48 D" address_reg_b $end
$var parameter 48 E" outdata_reg_b $end
$var parameter 32 F" outdata_aclr_b $end
$var parameter 48 G" indata_reg_b $end
$var parameter 48 H" byteena_reg_b $end
$var parameter 32 I" address_aclr_b $end
$var parameter 32 J" width_byteena_b $end
$var parameter 48 K" clock_enable_input_a $end
$var parameter 48 L" clock_enable_output_a $end
$var parameter 48 M" clock_enable_input_b $end
$var parameter 48 N" clock_enable_output_b $end
$var parameter 120 O" clock_enable_core_a $end
$var parameter 120 P" clock_enable_core_b $end
$var parameter 160 Q" read_during_write_mode_port_a $end
$var parameter 160 R" read_during_write_mode_port_b $end
$var parameter 72 S" read_during_write_mode_mixed_ports $end
$var parameter 40 T" enable_ecc $end
$var parameter 32 U" width_eccstatus $end
$var parameter 40 V" ecc_pipeline_stage_enabled $end
$var parameter 32 W" outdata_sclr_a $end
$var parameter 32 X" outdata_sclr_b $end
$var parameter 40 Y" enable_ecc_encoder_bypass $end
$var parameter 40 Z" enable_coherent_read $end
$var parameter 40 [" enable_force_to_zero $end
$var parameter 32 \" width_eccencparity $end
$var parameter 72 ]" operation_mode $end
$var parameter 32 ^" optimization_option $end
$var parameter 32 _" byte_size $end
$var parameter 32 `" ram_block_type $end
$var parameter 48 a" init_file $end
$var parameter 48 b" init_file_layout $end
$var parameter 32 c" maximum_depth $end
$var parameter 80 d" intended_device_family $end
$var parameter 48 e" lpm_hint $end
$var parameter 112 f" lpm_type $end
$var parameter 24 g" implement_in_les $end
$var parameter 40 h" power_up_uninitialized $end
$var parameter 24 i" sim_show_memory_data_in_port_b_layout $end
$var parameter 32 j" enable_non_corrupted_behav $end
$var parameter 32 k" enable_vcs_sqp_be_rdw $end
$var parameter 32 l" is_lutram $end
$var parameter 32 m" is_bidir_and_wrcontrol_addb_clk0 $end
$var parameter 32 n" is_bidir_and_wrcontrol_addb_clk1 $end
$var parameter 32 o" dual_port_addreg_b_clk0 $end
$var parameter 32 p" dual_port_addreg_b_clk1 $end
$var parameter 32 q" i_byte_size_tmp $end
$var parameter 32 r" i_lutram_read $end
$var parameter 32 s" enable_mem_data_b_reading $end
$var parameter 48 t" wrcontrol_wraddress_reg_b $end
$var parameter 32 u" is_write_on_positive_edge $end
$var parameter 32 v" lutram_single_port_fast_read $end
$var parameter 32 w" lutram_dual_port_fast_read $end
$var parameter 32 x" block_ram_output_unreg $end
$var parameter 32 y" s3_address_aclr_b $end
$var parameter 32 z" is_rom $end
$var parameter 32 {" is_sqp $end
$var parameter 32 |" i_address_aclr_family_b $end
$var parameter 32 }" family_c10gx $end
$var parameter 32 ~" family_arria10 $end
$var parameter 32 !# family_stratix10 $end
$var tri0 1 t! wren_a $end
$var tri0 1 "# wren_b $end
$var tri1 1 ## rden_a $end
$var tri1 1 $# rden_b $end
$var wire 1 *! data_a [31] $end
$var wire 1 +! data_a [30] $end
$var wire 1 ,! data_a [29] $end
$var wire 1 -! data_a [28] $end
$var wire 1 .! data_a [27] $end
$var wire 1 /! data_a [26] $end
$var wire 1 0! data_a [25] $end
$var wire 1 1! data_a [24] $end
$var wire 1 2! data_a [23] $end
$var wire 1 3! data_a [22] $end
$var wire 1 4! data_a [21] $end
$var wire 1 5! data_a [20] $end
$var wire 1 6! data_a [19] $end
$var wire 1 7! data_a [18] $end
$var wire 1 8! data_a [17] $end
$var wire 1 9! data_a [16] $end
$var wire 1 :! data_a [15] $end
$var wire 1 ;! data_a [14] $end
$var wire 1 <! data_a [13] $end
$var wire 1 =! data_a [12] $end
$var wire 1 >! data_a [11] $end
$var wire 1 ?! data_a [10] $end
$var wire 1 @! data_a [9] $end
$var wire 1 A! data_a [8] $end
$var wire 1 B! data_a [7] $end
$var wire 1 C! data_a [6] $end
$var wire 1 D! data_a [5] $end
$var wire 1 E! data_a [4] $end
$var wire 1 F! data_a [3] $end
$var wire 1 G! data_a [2] $end
$var wire 1 H! data_a [1] $end
$var wire 1 I! data_a [0] $end
$var wire 1 %# data_b [31] $end
$var wire 1 &# data_b [30] $end
$var wire 1 '# data_b [29] $end
$var wire 1 (# data_b [28] $end
$var wire 1 )# data_b [27] $end
$var wire 1 *# data_b [26] $end
$var wire 1 +# data_b [25] $end
$var wire 1 ,# data_b [24] $end
$var wire 1 -# data_b [23] $end
$var wire 1 .# data_b [22] $end
$var wire 1 /# data_b [21] $end
$var wire 1 0# data_b [20] $end
$var wire 1 1# data_b [19] $end
$var wire 1 2# data_b [18] $end
$var wire 1 3# data_b [17] $end
$var wire 1 4# data_b [16] $end
$var wire 1 5# data_b [15] $end
$var wire 1 6# data_b [14] $end
$var wire 1 7# data_b [13] $end
$var wire 1 8# data_b [12] $end
$var wire 1 9# data_b [11] $end
$var wire 1 :# data_b [10] $end
$var wire 1 ;# data_b [9] $end
$var wire 1 <# data_b [8] $end
$var wire 1 =# data_b [7] $end
$var wire 1 ># data_b [6] $end
$var wire 1 ?# data_b [5] $end
$var wire 1 @# data_b [4] $end
$var wire 1 A# data_b [3] $end
$var wire 1 B# data_b [2] $end
$var wire 1 C# data_b [1] $end
$var wire 1 D# data_b [0] $end
$var wire 1 j! address_a [4] $end
$var wire 1 k! address_a [3] $end
$var wire 1 l! address_a [2] $end
$var wire 1 m! address_a [1] $end
$var wire 1 n! address_a [0] $end
$var wire 1 o! address_b [4] $end
$var wire 1 p! address_b [3] $end
$var wire 1 q! address_b [2] $end
$var wire 1 r! address_b [1] $end
$var wire 1 s! address_b [0] $end
$var tri1 1 ' clock0 $end
$var wire 1 E# clock1 $end
$var tri1 1 F# clocken0 $end
$var tri1 1 G# clocken1 $end
$var tri1 1 H# clocken2 $end
$var tri1 1 I# clocken3 $end
$var tri0 1 J# aclr0 $end
$var tri0 1 K# aclr1 $end
$var tri1 1 L# byteena_a [0] $end
$var tri1 1 M# byteena_b [0] $end
$var tri0 1 N# addressstall_a $end
$var tri0 1 O# addressstall_b $end
$var tri0 1 P# sclr $end
$var tri0 1 Q# eccencbypass $end
$var tri0 1 R# eccencparity [7] $end
$var tri0 1 S# eccencparity [6] $end
$var tri0 1 T# eccencparity [5] $end
$var tri0 1 U# eccencparity [4] $end
$var tri0 1 V# eccencparity [3] $end
$var tri0 1 W# eccencparity [2] $end
$var tri0 1 X# eccencparity [1] $end
$var tri0 1 Y# eccencparity [0] $end
$var tri0 1 Z# address2_a [0] $end
$var tri0 1 [# address2_b [0] $end
$var wire 1 \# q_a [31] $end
$var wire 1 ]# q_a [30] $end
$var wire 1 ^# q_a [29] $end
$var wire 1 _# q_a [28] $end
$var wire 1 `# q_a [27] $end
$var wire 1 a# q_a [26] $end
$var wire 1 b# q_a [25] $end
$var wire 1 c# q_a [24] $end
$var wire 1 d# q_a [23] $end
$var wire 1 e# q_a [22] $end
$var wire 1 f# q_a [21] $end
$var wire 1 g# q_a [20] $end
$var wire 1 h# q_a [19] $end
$var wire 1 i# q_a [18] $end
$var wire 1 j# q_a [17] $end
$var wire 1 k# q_a [16] $end
$var wire 1 l# q_a [15] $end
$var wire 1 m# q_a [14] $end
$var wire 1 n# q_a [13] $end
$var wire 1 o# q_a [12] $end
$var wire 1 p# q_a [11] $end
$var wire 1 q# q_a [10] $end
$var wire 1 r# q_a [9] $end
$var wire 1 s# q_a [8] $end
$var wire 1 t# q_a [7] $end
$var wire 1 u# q_a [6] $end
$var wire 1 v# q_a [5] $end
$var wire 1 w# q_a [4] $end
$var wire 1 x# q_a [3] $end
$var wire 1 y# q_a [2] $end
$var wire 1 z# q_a [1] $end
$var wire 1 {# q_a [0] $end
$var wire 1 u! q_b [31] $end
$var wire 1 v! q_b [30] $end
$var wire 1 w! q_b [29] $end
$var wire 1 x! q_b [28] $end
$var wire 1 y! q_b [27] $end
$var wire 1 z! q_b [26] $end
$var wire 1 {! q_b [25] $end
$var wire 1 |! q_b [24] $end
$var wire 1 }! q_b [23] $end
$var wire 1 ~! q_b [22] $end
$var wire 1 !" q_b [21] $end
$var wire 1 "" q_b [20] $end
$var wire 1 #" q_b [19] $end
$var wire 1 $" q_b [18] $end
$var wire 1 %" q_b [17] $end
$var wire 1 &" q_b [16] $end
$var wire 1 '" q_b [15] $end
$var wire 1 (" q_b [14] $end
$var wire 1 )" q_b [13] $end
$var wire 1 *" q_b [12] $end
$var wire 1 +" q_b [11] $end
$var wire 1 ," q_b [10] $end
$var wire 1 -" q_b [9] $end
$var wire 1 ." q_b [8] $end
$var wire 1 /" q_b [7] $end
$var wire 1 0" q_b [6] $end
$var wire 1 1" q_b [5] $end
$var wire 1 2" q_b [4] $end
$var wire 1 3" q_b [3] $end
$var wire 1 4" q_b [2] $end
$var wire 1 5" q_b [1] $end
$var wire 1 6" q_b [0] $end
$var wire 1 |# eccstatus [1] $end
$var wire 1 }# eccstatus [0] $end
$var reg 8 ~# i_eccencparity [7:0] $end
$var reg 32 !$ i_data_reg_a [31:0] $end
$var reg 2 "$ temp_ecc_a [1:0] $end
$var reg 2 #$ temp_ecc_b [1:0] $end
$var reg 32 $$ temp_wa [31:0] $end
$var reg 32 %$ temp_wa2 [31:0] $end
$var reg 32 &$ temp_wa2b [31:0] $end
$var reg 32 '$ init_temp [31:0] $end
$var reg 32 ($ i_data_reg_b [31:0] $end
$var reg 32 )$ temp_wb [31:0] $end
$var reg 32 *$ ecc_status_old [31:0] $end
$var reg 32 +$ temp_wb2 [31:0] $end
$var reg 1 ,$ temp $end
$var reg 32 -$ i_q_reg_a [31:0] $end
$var reg 2 .$ i_q_reg_ecc_a [1:0] $end
$var reg 32 /$ i_q_tmp_a [31:0] $end
$var reg 2 0$ i_q_tmp_ecc_a [1:0] $end
$var reg 32 1$ i_q_tmp2_a [31:0] $end
$var reg 2 2$ i_q_tmp2_ecc_a [1:0] $end
$var reg 32 3$ i_q_reg_b [31:0] $end
$var reg 2 4$ i_q_reg_ecc_b [1:0] $end
$var reg 32 5$ i_q_tmp_b [31:0] $end
$var reg 2 6$ i_q_tmp_ecc_b [1:0] $end
$var reg 32 7$ i_q_tmp2_b [31:0] $end
$var reg 2 8$ i_q_tmp2_ecc_b [1:0] $end
$var reg 32 9$ i_q_output_latch [31:0] $end
$var reg 2 :$ i_q_output_latch_ecc [1:0] $end
$var reg 32 ;$ i_byteena_mask_reg_a [31:0] $end
$var reg 32 <$ i_byteena_mask_reg_b [31:0] $end
$var reg 5 =$ i_address_reg_a [4:0] $end
$var reg 5 >$ i_address_reg_b [4:0] $end
$var reg 1 ?$ i_address_reg_a2 [0:0] $end
$var reg 1 @$ i_address_reg_b2 [0:0] $end
$var reg 32 A$ i_q_ecc_reg_b [31:0] $end
$var reg 2 B$ i_q_ecc_status_reg_b [1:0] $end
$var reg 32 C$ i_q_ecc_tmp_b [31:0] $end
$var reg 2 D$ i_q_ecc_status_tmp_b [1:0] $end
$var reg 5 E$ i_original_address_a [4:0] $end
$var reg 32 F$ i_byteena_mask_reg_a_tmp [31:0] $end
$var reg 32 G$ i_byteena_mask_reg_b_tmp [31:0] $end
$var reg 32 H$ i_byteena_mask_reg_a_out [31:0] $end
$var reg 32 I$ i_byteena_mask_reg_b_out [31:0] $end
$var reg 32 J$ i_byteena_mask_reg_a_x [31:0] $end
$var reg 32 K$ i_byteena_mask_reg_b_x [31:0] $end
$var reg 32 L$ i_byteena_mask_reg_a_out_b [31:0] $end
$var reg 32 M$ i_byteena_mask_reg_b_out_a [31:0] $end
$var reg 2048 N$ ram_initf [2048:1] $end
$var reg 1 O$ i_wren_reg_a $end
$var reg 1 P$ i_wren_reg_b $end
$var reg 1 Q$ i_rden_reg_a $end
$var reg 1 R$ i_rden_reg_b $end
$var reg 1 S$ i_rden_reg_b_bypass $end
$var reg 1 T$ i_read_flag_a $end
$var reg 1 U$ i_read_flag_b $end
$var reg 1 V$ i_write_flag_a $end
$var reg 1 W$ i_write_flag_b $end
$var reg 1 X$ good_to_go_a $end
$var reg 1 Y$ good_to_go_b $end
$var reg 32 Z$ file_desc [31:0] $end
$var reg 1 [$ init_file_b_port $end
$var reg 1 \$ i_nmram_write_a $end
$var reg 1 ]$ i_nmram_write_b $end
$var reg 32 ^$ wa_mult_x [31:0] $end
$var reg 2 _$ ecc_a_mult_x [1:0] $end
$var reg 32 `$ wa_mult_x_ii [31:0] $end
$var reg 32 a$ wa_mult_x_iii [31:0] $end
$var reg 37 b$ add_reg_a_mult_wa [36:0] $end
$var reg 37 c$ add_reg_b_mult_wb [36:0] $end
$var reg 37 d$ add_reg_a_mult_wa_pl_wa [36:0] $end
$var reg 37 e$ add_reg_b_mult_wb_pl_wb [36:0] $end
$var reg 1 f$ same_clock_pulse0 $end
$var reg 1 g$ same_clock_pulse1 $end
$var reg 32 h$ i_original_data_b [31:0] $end
$var reg 32 i$ i_original_data_a [31:0] $end
$var reg 1 j$ i_address_aclr_a_flag $end
$var reg 1 k$ i_address_aclr_a_prev $end
$var reg 1 l$ i_address_aclr_b_flag $end
$var reg 1 m$ i_address_aclr_b_prev $end
$var reg 1 n$ i_outdata_aclr_a_prev $end
$var reg 1 o$ i_outdata_aclr_b_prev $end
$var reg 1 p$ i_outdata_aclr_b_reg $end
$var reg 1 q$ i_outdata_sclr_a_prev $end
$var reg 1 r$ i_outdata_sclr_b_prev $end
$var reg 1 s$ i_outdata_sclr_a_reg $end
$var reg 1 t$ i_outdata_sclr_b_reg $end
$var reg 1 u$ i_force_reread_a $end
$var reg 1 v$ i_force_reread_a1 $end
$var reg 1 w$ i_force_reread_b $end
$var reg 1 x$ i_force_reread_b1 $end
$var reg 1 y$ i_force_reread_a_signal $end
$var reg 1 z$ i_force_reread_b_signal $end
$var reg 1 {$ wren_a_dly $end
$var reg 1 |$ wren_b_dly $end
$var reg 1 }$ rden_a_dly $end
$var reg 1 ~$ rden_b_dly $end
$var reg 32 !% data_a_dly [31:0] $end
$var reg 32 "% data_b_dly [31:0] $end
$var reg 5 #% address_a_dly [4:0] $end
$var reg 5 $% address_b_dly [4:0] $end
$var reg 1 %% clocken0_dly $end
$var reg 1 &% clocken1_dly $end
$var reg 1 '% clocken2_dly $end
$var reg 1 (% clocken3_dly $end
$var reg 1 )% byteena_a_dly [0:0] $end
$var reg 1 *% byteena_b_dly [0:0] $end
$var reg 1 +% addressstall_a_dly $end
$var reg 1 ,% addressstall_b_dly $end
$var reg 1 -% address2_a_dly [0:0] $end
$var reg 1 .% address2_b_dly [0:0] $end
$var reg 8 /% eccencparity_dly [7:0] $end
$var reg 1 0% eccencbypass_dly $end
$var reg 169 1% cread_during_write_mode_mixed_ports [168:0] $end
$var reg 57 2% i_ram_block_type [56:0] $end
$var integer 32 3% i_byte_size $end
$var wire 1 4% i_good_to_write_a $end
$var wire 1 5% i_good_to_write_b $end
$var reg 1 6% i_good_to_write_a2 $end
$var reg 1 7% i_good_to_write_b2 $end
$var reg 1 8% i_core_clocken_a_reg $end
$var reg 1 9% i_core_clocken0_b_reg $end
$var reg 1 :% i_core_clocken1_b_reg $end
$var wire 1 ;% i_indata_aclr_a $end
$var wire 1 <% i_address_aclr_a $end
$var wire 1 =% i_wrcontrol_aclr_a $end
$var wire 1 >% i_indata_aclr_b $end
$var wire 1 ?% i_address_aclr_b $end
$var wire 1 @% i_wrcontrol_aclr_b $end
$var wire 1 A% i_outdata_aclr_a $end
$var wire 1 B% i_outdata_aclr_b $end
$var wire 1 C% i_outdata_sclr_a $end
$var wire 1 D% i_outdata_sclr_b $end
$var wire 1 E% i_rdcontrol_aclr_b $end
$var wire 1 F% i_byteena_aclr_a $end
$var wire 1 G% i_byteena_aclr_b $end
$var wire 1 H% i_outdata_clken_a $end
$var wire 1 I% i_outdata_clken_b $end
$var wire 1 J% i_outlatch_clken_a $end
$var wire 1 K% i_outlatch_clken_b $end
$var wire 1 L% i_clocken0 $end
$var wire 1 M% i_clocken1_b $end
$var wire 1 N% i_clocken0_b $end
$var wire 1 O% i_core_clocken_a $end
$var wire 1 P% i_core_clocken_b $end
$var wire 1 Q% i_core_clocken0_b $end
$var wire 1 R% i_core_clocken1_b $end
$var wire 1 S% i_out_addr_a [4] $end
$var wire 1 T% i_out_addr_a [3] $end
$var wire 1 U% i_out_addr_a [2] $end
$var wire 1 V% i_out_addr_a [1] $end
$var wire 1 W% i_out_addr_a [0] $end
$var wire 1 X% i_out_addr_b [4] $end
$var wire 1 Y% i_out_addr_b [3] $end
$var wire 1 Z% i_out_addr_b [2] $end
$var wire 1 [% i_out_addr_b [1] $end
$var wire 1 \% i_out_addr_b [0] $end
$var tri1 1 ]% i_byteena_a [0] $end
$var tri1 1 ^% i_byteena_b [0] $end
$var integer 32 _% i_numwords_a $end
$var integer 32 `% i_numwords_b $end
$var integer 32 a% i_aclr_flag_a $end
$var integer 32 b% i_aclr_flag_b $end
$var integer 32 c% i_q_tmp2_a_idx $end
$var integer 32 d% init_i $end
$var integer 32 e% i $end
$var integer 32 f% i2 $end
$var integer 32 g% i3 $end
$var integer 32 h% i4 $end
$var integer 32 i% i5 $end
$var integer 32 j% j $end
$var integer 32 k% j2 $end
$var integer 32 l% j3 $end
$var integer 32 m% k $end
$var integer 32 n% k2 $end
$var integer 32 o% k3 $end
$var integer 32 p% k4 $end
$var integer 32 q% i_div_wa $end
$var integer 32 r% i_div_wb $end
$var integer 32 s% j_plus_i2 $end
$var integer 32 t% j2_plus_i5 $end
$var integer 32 u% j3_plus_i5 $end
$var integer 32 v% j_plus_i2_div_a $end
$var integer 32 w% j2_plus_i5_div_a $end
$var integer 32 x% j3_plus_i5_div_a $end
$var integer 32 y% j3_plus_i5_div_b $end
$var integer 32 z% i_byteena_count $end
$var integer 32 {% port_a_bit_count_low $end
$var integer 32 |% port_a_bit_count_high $end
$var integer 32 }% port_b_bit_count_low $end
$var integer 32 ~% port_b_bit_count_high $end
$var time 64 !& i_data_write_time_a $end
$var time 64 "& i_data_write_time_b $end
$var wire 1 #& fwd_logic_flag $end
$var wire 1 $& fwd_logic_output [31] $end
$var wire 1 %& fwd_logic_output [30] $end
$var wire 1 && fwd_logic_output [29] $end
$var wire 1 '& fwd_logic_output [28] $end
$var wire 1 (& fwd_logic_output [27] $end
$var wire 1 )& fwd_logic_output [26] $end
$var wire 1 *& fwd_logic_output [25] $end
$var wire 1 +& fwd_logic_output [24] $end
$var wire 1 ,& fwd_logic_output [23] $end
$var wire 1 -& fwd_logic_output [22] $end
$var wire 1 .& fwd_logic_output [21] $end
$var wire 1 /& fwd_logic_output [20] $end
$var wire 1 0& fwd_logic_output [19] $end
$var wire 1 1& fwd_logic_output [18] $end
$var wire 1 2& fwd_logic_output [17] $end
$var wire 1 3& fwd_logic_output [16] $end
$var wire 1 4& fwd_logic_output [15] $end
$var wire 1 5& fwd_logic_output [14] $end
$var wire 1 6& fwd_logic_output [13] $end
$var wire 1 7& fwd_logic_output [12] $end
$var wire 1 8& fwd_logic_output [11] $end
$var wire 1 9& fwd_logic_output [10] $end
$var wire 1 :& fwd_logic_output [9] $end
$var wire 1 ;& fwd_logic_output [8] $end
$var wire 1 <& fwd_logic_output [7] $end
$var wire 1 =& fwd_logic_output [6] $end
$var wire 1 >& fwd_logic_output [5] $end
$var wire 1 ?& fwd_logic_output [4] $end
$var wire 1 @& fwd_logic_output [3] $end
$var wire 1 A& fwd_logic_output [2] $end
$var wire 1 B& fwd_logic_output [1] $end
$var wire 1 C& fwd_logic_output [0] $end
$var wire 1 D& dataout_b_clear $end
$var wire 1 E& forward_logic_sel $end

$scope task initialize_mem_contents $end
$upscope $end

$scope begin genblk5 $end
$upscope $end

$scope begin genblk4 $end
$upscope $end

$scope begin genblk1 $end
$upscope $end

$scope module mem $end

$scope function tolower $end
$var reg 8 F& tolower [8:1] $end
$var reg 8 G& given_character [8:1] $end
$var reg 8 H& conv_char [8:1] $end
$upscope $end

$scope function ecc_parity $end
$var reg 8 I& ecc_parity [7:0] $end
$var reg 8 J& i_eccencparity [7:0] $end
$var integer 32 K& pointer $end
$var integer 32 L& pointer_max $end
$var integer 32 M& pointer_min $end
$var integer 32 N& flag_err $end
$var integer 32 O& flag $end
$var integer 32 P& flag_double $end
$var integer 32 Q& flag_triple $end
$var integer 32 R& flag_single $end
$var integer 32 S& flag_no_err $end
$var integer 32 T& flag_uncorr $end
$var integer 32 U& n $end
$var integer 32 V& err $end
$var integer 32 W& found $end
$var integer 32 X& found_2 $end
$upscope $end

$scope task convert_mif2ver $end
$var reg 2048 Y& in_file [2048:1] $end
$var integer 32 Z& width $end
$var reg 2048 [& out_file [2048:1] $end
$var reg 2048 \& buffer [2048:1] $end
$var reg 1025 ]& memory_data1 [1024:0] $end
$var reg 1025 ^& memory_data2 [1024:0] $end
$var reg 8 _& c [8:1] $end
$var reg 4 `& hex [3:0] $end
$var reg 4 a& tmp_char [3:0] $end
$var reg 24 b& address_radix [24:1] $end
$var reg 24 c& data_radix [24:1] $end
$var reg 1 d& get_width $end
$var reg 1 e& get_depth $end
$var reg 1 f& get_data_radix $end
$var reg 1 g& get_address_radix $end
$var reg 1 h& width_found $end
$var reg 1 i& depth_found $end
$var reg 1 j& data_radix_found $end
$var reg 1 k& address_radix_found $end
$var reg 1 l& get_address_data_pairs $end
$var reg 1 m& get_address $end
$var reg 1 n& get_data $end
$var reg 1 o& display_address $end
$var reg 1 p& invalid_address $end
$var reg 1 q& get_start_address $end
$var reg 1 r& get_end_address $end
$var reg 1 s& done $end
$var reg 1 t& error_status $end
$var reg 1 u& first_rec $end
$var reg 1 v& last_rec $end
$var integer 32 w& memory_width $end
$var integer 32 x& memory_depth $end
$var integer 32 y& value $end
$var integer 32 z& ifp $end
$var integer 32 {& ofp $end
$var integer 32 |& r $end
$var integer 32 }& r2 $end
$var integer 32 ~& i $end
$var integer 32 !' j $end
$var integer 32 "' k $end
$var integer 32 #' m $end
$var integer 32 $' n $end
$var integer 32 %' negative $end
$var integer 32 &' off_addr $end
$var integer 32 '' nn $end
$var integer 32 (' address $end
$var integer 32 )' tt $end
$var integer 32 *' cc $end
$var integer 32 +' aah $end
$var integer 32 ,' aal $end
$var integer 32 -' dd $end
$var integer 32 .' sum $end
$var integer 32 /' start_address $end
$var integer 32 0' end_address $end
$var integer 32 1' line_no $end
$var integer 32 2' character_count $end
$var integer 32 3' comment_with_percent_found $end
$var integer 32 4' comment_with_double_minus_found $end

$scope begin READER $end
$upscope $end
$upscope $end

$scope task convert_hex2ver $end
$var reg 2048 5' in_file [2048:1] $end
$var integer 32 6' width $end
$var reg 2048 7' out_file [2048:1] $end
$var reg 8 8' c [8:1] $end
$var reg 4 9' hex [3:0] $end
$var reg 4 :' tmp_char [3:0] $end
$var reg 1 ;' done $end
$var reg 1 <' error_status $end
$var reg 1 =' first_rec $end
$var reg 1 >' last_rec $end
$var reg 1 ?' first_normal_record $end
$var reg 1 @' is_word_address_format $end
$var integer 32 A' ifp $end
$var integer 32 B' ofp $end
$var integer 32 C' r $end
$var integer 32 D' r2 $end
$var integer 32 E' i $end
$var integer 32 F' j $end
$var integer 32 G' k $end
$var integer 32 H' m $end
$var integer 32 I' n $end
$var integer 32 J' off_addr $end
$var integer 32 K' nn $end
$var integer 32 L' aaaa $end
$var integer 32 M' aaaa_pre $end
$var integer 32 N' tt $end
$var integer 32 O' cc $end
$var integer 32 P' aah $end
$var integer 32 Q' aal $end
$var integer 32 R' dd $end
$var integer 32 S' sum $end
$var integer 32 T' line_no $end
$var integer 32 U' divide_factor $end

$scope begin READER $end
$upscope $end
$upscope $end

$scope task convert_to_ver_file $end
$var reg 2048 V' in_file [2048:1] $end
$var integer 32 W' width $end
$var reg 2048 X' out_file [2048:1] $end
$upscope $end
$upscope $end

$scope begin clk0_on_outb_fall_gen $end
$upscope $end

$scope begin clk0_on_outb_rise_gen $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope begin std $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
x"
0#
x$
b0 %
bx P
xr
bx s
bx t
0u
xv
xw
b0 x
b1 y
b0 z
b0 {
x|
bx }
b0 ~
b1 !!
bx ~#
b0 !$
bx "$
bx #$
bx $$
bx %$
bx &$
bx '$
b0 ($
bx )$
bx *$
bx +$
x,$
b0 -$
b0 .$
b0 /$
b0 0$
b0 1$
b0 2$
b0 3$
b0 4$
b0 5$
b0 6$
b0 7$
b0 8$
b0 9$
b0 :$
b0 ;$
b0 <$
bx =$
bx >$
b0 ?$
b0 @$
b0 A$
b0 B$
bx C$
bx D$
b0 E$
bx F$
bx G$
b0 H$
b0 I$
b0 J$
b0 K$
bx L$
bx M$
b0 N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
bx Z$
x[$
0\$
0]$
b0 ^$
b0 _$
bx `$
bx a$
bx b$
bx c$
bx d$
bx e$
0f$
0g$
b0 h$
b0 i$
xj$
0k$
0l$
0m$
0n$
0o$
xp$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
0y$
0z$
0{$
0|$
1}$
1~$
b1 !%
b11111111111111111111111111111111 "%
bx #%
b0 $%
1%%
1&%
1'%
1(%
b1 )%
b1 *%
0+%
0,%
b1 -%
b1 .%
b0 /%
00%
b10001000100111101001110010101000101111101000011010000010101001001000101 1%
b1000001010101010101010001001111 2%
16%
17%
08%
09%
1:%
bx F&
bx G&
bx H&
bx I&
bx J&
bx Y&
bx [&
bx \&
bx ]&
bx ^&
bx _&
bx `&
bx a&
bx b&
bx c&
xd&
xe&
xf&
xg&
xh&
xi&
xj&
xk&
xl&
xm&
xn&
xo&
xp&
xq&
xr&
xs&
xt&
xu&
xv&
bx 5'
bx 7'
bx 8'
bx 9'
bx :'
x;'
x<'
x='
x>'
x?'
x@'
bx V'
bx X'
bx "!
bx #!
bx $!
bx %!
bx &!
bx '!
x(!
x)!
bx &
b100000 7"
b101 8"
b1 9"
b100000 :"
b1 >"
b100000 ?"
b101 @"
b1 A"
b100000 B"
b1 J"
b10 U"
b1000 \"
b0 _"
b0 c"
b0 j"
b0 k"
b0 l"
b0 m"
b0 n"
b1 o"
b0 p"
b1000 q"
b0 r"
b0 s"
b1 u"
b0 v"
b0 w"
b1 x"
b0 y"
b0 z"
b0 {"
b0 |"
b0 }"
b0 ~"
b1 !#
b10101010100111001010010010001010100011101001001010100110101010001000101010100100100010101000100 ;"
b1001110010011110100111001000101 <"
b1001110010011110100111001000101 ="
b10000110100110001001111010000110100101100110001 C"
b10000110100110001001111010000110100101100110000 D"
b10000110100110001001111010000110100101100110000 E"
b1001110010011110100111001000101 F"
b10000110100110001001111010000110100101100110001 G"
b10000110100110001001111010000110100101100110001 H"
b1001110010011110100111001000101 I"
b10000100101100101010000010000010101001101010011 K"
b10011100100111101010010010011010100000101001100 L"
b10000100101100101010000010000010101001101010011 M"
b10000100101100101010000010000010101001101010011 N"
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 O"
b10101010101001101000101010111110100100101001110010100000101010101010100010111110100001101001100010010110100010101001110 P"
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 Q"
b100111001000101010101110101111101000100010000010101010001000001010111110100111001001111010111110100111001000010010001010101111101010010010001010100000101000100 R"
b10001000100111101001110010101000101111101000011010000010101001001000101 S"
b100011001000001010011000101001101000101 T"
b100011001000001010011000101001101000101 V"
b1001110010011110100111001000101 W"
b1001110010011110100111001000101 X"
b100011001000001010011000101001101000101 Y"
b100011001000001010011000101001101000101 Z"
b100011001000001010011000101001101000101 ["
b10001000101010101000001010011000101111101010000010011110101001001010100 ]"
b1000001010101010101010001001111 ^"
b1000001010101010101010001001111 `"
b10101010100111001010101010100110100010101000100 a"
b10101010100111001010101010100110100010101000100 b"
b1010011011101000111001001100001011101000110100101111000001000000011000100110000 d"
b10101010100111001010101010100110100010101000100 e"
b110000101101100011101000110010101110010011000010101111101110011011110010110111001100011011100100110000101101101 f"
b10011110100011001000110 g"
b100011001000001010011000101001101000101 h"
b10011110100011001000110 i"
b10000110100110001001111010000110100101100110001 t"
b1000 3%
b100000 _%
b100000 `%
b0 a%
b0 b%
bx c%
bx d%
b100000 e%
bx f%
bx g%
bx h%
bx i%
bx j%
bx k%
bx l%
bx m%
bx n%
bx o%
bx p%
bx q%
bx r%
bx s%
bx t%
bx u%
bx v%
bx w%
bx x%
bx y%
b0 z%
bx {%
bx |%
bx }%
bx ~%
bx K&
bx L&
bx M&
bx N&
bx O&
bx P&
bx Q&
bx R&
bx S&
bx T&
bx U&
bx V&
bx W&
bx X&
bx Z&
bx w&
bx x&
bx y&
bx z&
bx {&
bx |&
bx }&
bx ~&
bx !'
bx "'
bx #'
bx $'
bx %'
bx &'
bx ''
bx ('
bx )'
bx *'
bx +'
bx ,'
bx -'
bx .'
bx /'
bx 0'
bx 1'
bx 2'
bx 3'
bx 4'
bx 6'
bx A'
bx B'
bx C'
bx D'
bx E'
bx F'
bx G'
bx H'
bx I'
bx J'
bx K'
bx L'
bx M'
bx N'
bx O'
bx P'
bx Q'
bx R'
bx S'
bx T'
bx U'
bx W'
b0 !&
b0 "&
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
14%
15%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
0G%
1H%
1I%
1J%
1K%
1L%
1M%
1N%
1O%
1P%
1Q%
1R%
xW%
xV%
xU%
xT%
xS%
x\%
x[%
xZ%
xY%
xX%
1]%
1^%
z#&
zC&
zB&
zA&
z@&
z?&
z>&
z=&
z<&
z;&
z:&
z9&
z8&
z7&
z6&
z5&
z4&
z3&
z2&
z1&
z0&
z/&
z.&
z-&
z,&
z+&
z*&
z)&
z(&
z'&
z&&
z%&
z$&
xD&
0E&
x/
0.
0-
0,
0+
0*
0)
x(
0'
zO
zN
zM
zL
zK
zJ
zI
zH
zG
zF
zE
zD
zC
zB
zA
z@
z?
z>
z=
z<
z;
z:
z9
z8
z7
z6
z5
z4
z3
z2
z1
z0
zQ
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
zf
ze
zd
zc
zb
za
z`
z_
z^
z]
z\
z[
zZ
zY
zX
zW
zV
zU
zT
zS
zR
xt!
0s!
0r!
0q!
0p!
0o!
xn!
xm!
xl!
xk!
xj!
1I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0P#
0Q#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
1[#
1Z#
0O#
0N#
1M#
1L#
0K#
0J#
1I#
1H#
1G#
1F#
1E#
1D#
1C#
1B#
1A#
1@#
1?#
1>#
1=#
1<#
1;#
1:#
19#
18#
17#
16#
15#
14#
13#
12#
11#
10#
1/#
1.#
1-#
1,#
1+#
1*#
1)#
1(#
1'#
1&#
1%#
1$#
1##
0"#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0}#
0|#
$end
#5000
1!
1'
1f$
18%
19%
1T$
1X$
1Q$
b1 !$
b1 ?$
b11111111111111111111111111111111 ;$
1Y$
1R$
1U$
0p$
b0 >$
b0 s
0v
b1 "!
b0x &!
0D&
0\%
0[%
0Z%
0Y%
0X%
b0 )$
b0 #$
#10000
0!
0'
0f$
#15000
1"
0$
1!
1(
0/
1'
b0 $!
b0 %!
b0 &!
b0 '!
b0 "!
b0 #!
0w
b0 t
1f$
0T$
0U$
b0 &
0)!
0(!
b0 }
0|
0n!
0m!
0l!
0k!
0j!
0t!
b0 #%
#20000
0!
0'
0f$
#25000
0"
1!
0(
1'
1f$
1T$
b0 =$
1U$
b1 "!
b1 &
0W%
0V%
0U%
0T%
0S%
b1 %
1#
1-
1.
1u
b1 {
b1 ~
1s!
b1 $%
#30000
0!
0'
0f$
#35000
1!
1'
1v
b1 s
b1 #!
1f$
0T$
0U$
b1 >$
b10 &
1\%
b0 %
0#
0-
0.
0u
b0 {
b0 ~
0s!
b0 $%
#40000
0!
0'
0f$
#45000
1!
1'
1f$
1T$
1U$
b0 >$
b0 s
b1 t
0v
1w
b11 &
0\%
b1 }
1|
1n!
1t!
1{$
b1 #%
#50000
0!
0'
0f$
#55000
1!
1'
b1 &!
0w
b1 $!
b0 t
1f$
0T$
1V$
1O$
b1 =$
0U$
b100 &
1W%
b0 *$
b1 E$
b1101011011011000 !&
b0 $$
b0 "$
b100000 {%
b0 }%
b100000 ~%
b0 i%
b1 $$
b100001 {%
b1 i%
b1 z%
b100010 {%
b10 i%
b10 z%
b100011 {%
b11 i%
b11 z%
b100100 {%
b100 i%
b100 z%
b100101 {%
b101 i%
b101 z%
b100110 {%
b110 i%
b110 z%
b100111 {%
b111 i%
b111 z%
b101000 {%
b1000 i%
b1000 z%
b101001 {%
b1001 i%
b1001 z%
b101010 {%
b1010 i%
b1010 z%
b101011 {%
b1011 i%
b1011 z%
b101100 {%
b1100 i%
b1100 z%
b101101 {%
b1101 i%
b1101 z%
b101110 {%
b1110 i%
b1110 z%
b101111 {%
b1111 i%
b1111 z%
b110000 {%
b10000 i%
b10000 z%
b110001 {%
b10001 i%
b10001 z%
b110010 {%
b10010 i%
b10010 z%
b110011 {%
b10011 i%
b10011 z%
b110100 {%
b10100 i%
b10100 z%
b110101 {%
b10101 i%
b10101 z%
b110110 {%
b10110 i%
b10110 z%
b110111 {%
b10111 i%
b10111 z%
b111000 {%
b11000 i%
b11000 z%
b111001 {%
b11001 i%
b11001 z%
b111010 {%
b11010 i%
b11010 z%
b111011 {%
b11011 i%
b11011 z%
b111100 {%
b11100 i%
b11100 z%
b111101 {%
b11101 i%
b11101 z%
b111110 {%
b11110 i%
b11110 z%
b111111 {%
b11111 i%
b11111 z%
b1000000 {%
b100000 i%
b0 J&
b0 K&
b0 L&
b0 M&
b0 N&
b0 O&
b0 P&
b0 Q&
b0 R&
b0 S&
b0 T&
b0 V&
b0 W&
b0 X&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
b0 I&
1U$
b0 }
0|
0n!
0t!
0{$
b0 #%
#60000
0!
0'
0f$
#65000
1!
1'
1f$
1T$
0V$
0O$
b0 =$
0U$
b0 $!
b1 %!
b0 &!
b1 '!
b101 &
0W%
b101 %
1#
1-
1+
1.
1u
b101 {
b101 ~
1s!
1q!
b101 $%
#70000
0!
0'
0f$
#75000
1!
1'
1v
b101 s
b0 '!
b0 %!
1f$
0T$
1U$
b101 >$
b110 &
1\%
1Z%
b0 %
0#
b110 %
1#
0-
1,
b110 {
b110 ~
0s!
1r!
b110 $%
#80000
0!
0'
0f$
#85000
1!
1'
1f$
1T$
0U$
b110 >$
b110 s
b101 t
1w
b111 &
0\%
1[%
b101 }
1|
1n!
1l!
1t!
b0 %
0#
b101 %
1#
1{$
b101 #%
1-
0,
b101 {
b101 ~
1s!
0r!
b101 $%
#90000
0!
0'
0f$
#95000
1!
1'
b1 &!
b101 $!
b101 s
b110 t
1f$
0T$
1V$
1O$
b101 =$
1U$
b101 >$
b1000 &
1\%
0[%
1W%
1U%
b101 E$
b10111001100011000 !&
b0 $$
b10100000 {%
b10100000 }%
b11000000 ~%
b0 i%
b0 z%
b1 $$
b10100001 {%
b1 i%
b1 z%
b10100010 {%
b10 i%
b10 z%
b10100011 {%
b11 i%
b11 z%
b10100100 {%
b100 i%
b100 z%
b10100101 {%
b101 i%
b101 z%
b10100110 {%
b110 i%
b110 z%
b10100111 {%
b111 i%
b111 z%
b10101000 {%
b1000 i%
b1000 z%
b10101001 {%
b1001 i%
b1001 z%
b10101010 {%
b1010 i%
b1010 z%
b10101011 {%
b1011 i%
b1011 z%
b10101100 {%
b1100 i%
b1100 z%
b10101101 {%
b1101 i%
b1101 z%
b10101110 {%
b1110 i%
b1110 z%
b10101111 {%
b1111 i%
b1111 z%
b10110000 {%
b10000 i%
b10000 z%
b10110001 {%
b10001 i%
b10001 z%
b10110010 {%
b10010 i%
b10010 z%
b10110011 {%
b10011 i%
b10011 z%
b10110100 {%
b10100 i%
b10100 z%
b10110101 {%
b10101 i%
b10101 z%
b10110110 {%
b10110 i%
b10110 z%
b10110111 {%
b10111 i%
b10111 z%
b10111000 {%
b11000 i%
b11000 z%
b10111001 {%
b11001 i%
b11001 z%
b10111010 {%
b11010 i%
b11010 z%
b10111011 {%
b11011 i%
b11011 z%
b10111100 {%
b11100 i%
b11100 z%
b10111101 {%
b11101 i%
b11101 z%
b10111110 {%
b11110 i%
b11110 z%
b10111111 {%
b11111 i%
b11111 z%
b11000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b110 }
0n!
1m!
b1 )$
bx )$
bx #$
b0 ($
bx 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 ($
bx 7$
bx 8$
b0 I$
0P$
b100000 `%
b0 %
0#
b101 %
1#
b110 #%
bx 5$
bx 6$
#100000
0!
0'
0f$
#105000
1!
1'
bx 3$
bx 4$
1f$
1T$
0V$
b110 =$
1U$
b101 t
b110 $!
b101 %!
b1 '!
b1001 &
1)!
x}#
x|#
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
bx x
0W%
1V%
b1 z
b101 }
b1 )$
b0 #$
b0 ($
b1 7$
bx 8$
b0 I$
0P$
b100000 `%
b0 ($
b1 7$
b0 8$
b0 I$
0P$
b100000 `%
b110 E$
b11001101000101000 !&
b0 $$
b0 i%
b0 z%
b1 $$
b11000001 {%
b1 i%
b1 z%
b11000010 {%
b10 i%
b10 z%
b11000011 {%
b11 i%
b11 z%
b11000100 {%
b100 i%
b100 z%
b11000101 {%
b101 i%
b101 z%
b11000110 {%
b110 i%
b110 z%
b11000111 {%
b111 i%
b111 z%
b11001000 {%
b1000 i%
b1000 z%
b11001001 {%
b1001 i%
b1001 z%
b11001010 {%
b1010 i%
b1010 z%
b11001011 {%
b1011 i%
b1011 z%
b11001100 {%
b1100 i%
b1100 z%
b11001101 {%
b1101 i%
b1101 z%
b11001110 {%
b1110 i%
b1110 z%
b11001111 {%
b1111 i%
b1111 z%
b11010000 {%
b10000 i%
b10000 z%
b11010001 {%
b10001 i%
b10001 z%
b11010010 {%
b10010 i%
b10010 z%
b11010011 {%
b10011 i%
b10011 z%
b11010100 {%
b10100 i%
b10100 z%
b11010101 {%
b10101 i%
b10101 z%
b11010110 {%
b10110 i%
b10110 z%
b11010111 {%
b10111 i%
b10111 z%
b11011000 {%
b11000 i%
b11000 z%
b11011001 {%
b11001 i%
b11001 z%
b11011010 {%
b11010 i%
b11010 z%
b11011011 {%
b11011 i%
b11011 z%
b11011100 {%
b11100 i%
b11100 z%
b11011101 {%
b11101 i%
b11101 z%
b11011110 {%
b11110 i%
b11110 z%
b11011111 {%
b11111 i%
b11111 z%
b11100000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b10 y
1n!
0m!
b10 !!
0I!
1H!
b0 %
0#
b101 %
1#
b101 #%
b1 5$
b0 6$
b10 !%
#110000
0!
0'
b1 9$
0f$
#115000
1!
1'
b10 "!
b101 $!
b110 %!
1f$
0T$
1V$
b10 !$
b101 =$
1U$
b1 3$
b0 4$
b1010 &
0)!
1(!
0}#
0|#
16"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
1i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
b1 x
1W%
0V%
b0 1$
b0 2$
b1 i$
b100000 _%
b101 E$
b11100000100111000 !&
b10100000 {%
b0 i%
b0 z%
b0 $$
b10100001 {%
b1 i%
b1 z%
b10 $$
b10100010 {%
b10 i%
b10 z%
b10100011 {%
b11 i%
b11 z%
b10100100 {%
b100 i%
b100 z%
b10100101 {%
b101 i%
b101 z%
b10100110 {%
b110 i%
b110 z%
b10100111 {%
b111 i%
b111 z%
b10101000 {%
b1000 i%
b1000 z%
b10101001 {%
b1001 i%
b1001 z%
b10101010 {%
b1010 i%
b1010 z%
b10101011 {%
b1011 i%
b1011 z%
b10101100 {%
b1100 i%
b1100 z%
b10101101 {%
b1101 i%
b1101 z%
b10101110 {%
b1110 i%
b1110 z%
b10101111 {%
b1111 i%
b1111 z%
b10110000 {%
b10000 i%
b10000 z%
b10110001 {%
b10001 i%
b10001 z%
b10110010 {%
b10010 i%
b10010 z%
b10110011 {%
b10011 i%
b10011 z%
b10110100 {%
b10100 i%
b10100 z%
b10110101 {%
b10101 i%
b10101 z%
b10110110 {%
b10110 i%
b10110 z%
b10110111 {%
b10111 i%
b10111 z%
b10111000 {%
b11000 i%
b11000 z%
b10111001 {%
b11001 i%
b11001 z%
b10111010 {%
b11010 i%
b11010 z%
b10111011 {%
b11011 i%
b11011 z%
b10111100 {%
b11100 i%
b11100 z%
b10111101 {%
b11101 i%
b11101 z%
b10111110 {%
b11110 i%
b11110 z%
b10111111 {%
b11111 i%
b11111 z%
b11000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b10 z
b11 y
b11 !!
b10 )$
bx )$
bx #$
b0 ($
bx 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 ($
bx 7$
bx 8$
b0 I$
0P$
b100000 `%
1I!
b0 %
0#
b101 %
1#
b11 !%
bx 5$
bx 6$
#120000
0!
0'
0f$
b1 :$
#125000
1!
1'
bx 3$
bx 4$
1f$
1T$
0V$
b11 !$
1U$
b101 %!
b11 "!
b10 #!
b1011 &
1)!
x}#
x|#
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
bx x
b11 z
b10 )$
b0 #$
b0 ($
b10 7$
bx 8$
b0 I$
0P$
b100000 `%
b0 ($
b10 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 1$
b0 2$
b10 i$
b100000 _%
b11110100001001000 !&
b10100000 {%
b0 i%
b0 z%
b11 $$
b10100001 {%
b1 i%
b1 z%
b10100010 {%
b10 i%
b10 z%
b10100011 {%
b11 i%
b11 z%
b10100100 {%
b100 i%
b100 z%
b10100101 {%
b101 i%
b101 z%
b10100110 {%
b110 i%
b110 z%
b10100111 {%
b111 i%
b111 z%
b10101000 {%
b1000 i%
b1000 z%
b10101001 {%
b1001 i%
b1001 z%
b10101010 {%
b1010 i%
b1010 z%
b10101011 {%
b1011 i%
b1011 z%
b10101100 {%
b1100 i%
b1100 z%
b10101101 {%
b1101 i%
b1101 z%
b10101110 {%
b1110 i%
b1110 z%
b10101111 {%
b1111 i%
b1111 z%
b10110000 {%
b10000 i%
b10000 z%
b10110001 {%
b10001 i%
b10001 z%
b10110010 {%
b10010 i%
b10010 z%
b10110011 {%
b10011 i%
b10011 z%
b10110100 {%
b10100 i%
b10100 z%
b10110101 {%
b10101 i%
b10101 z%
b10110110 {%
b10110 i%
b10110 z%
b10110111 {%
b10111 i%
b10111 z%
b10111000 {%
b11000 i%
b11000 z%
b10111001 {%
b11001 i%
b11001 z%
b10111010 {%
b11010 i%
b11010 z%
b10111011 {%
b11011 i%
b11011 z%
b10111100 {%
b11100 i%
b11100 z%
b10111101 {%
b11101 i%
b11101 z%
b10111110 {%
b11110 i%
b11110 z%
b10111111 {%
b11111 i%
b11111 z%
b11000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b100 y
b100 !!
b11 )$
bx )$
bx #$
b0 ($
bx 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 ($
bx 7$
bx 8$
b0 I$
0P$
b100000 `%
0I!
0H!
1G!
b0 %
0#
b1011 %
1#
b100 !%
1,
0+
1*
b1011 {
b1011 ~
1r!
0q!
1p!
b1011 $%
#130000
0!
0'
b10 9$
b10 :$
0f$
#135000
1!
1'
b1011 s
b100 "!
b11 #!
1f$
0T$
1V$
b100 !$
1U$
b1011 >$
b1100 &
1[%
0Z%
1Y%
b0 )$
b0 #$
b0 ($
b0 7$
bx 8$
b0 I$
0P$
b100000 `%
b0 ($
b0 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 1$
b0 2$
b11 i$
b100000 _%
b100000111101011000 !&
b10100000 {%
b101100000 }%
b110000000 ~%
b0 i%
b0 z%
b10 $$
b10100001 {%
b1 i%
b1 z%
b0 $$
b10100010 {%
b10 i%
b10 z%
b100 $$
b10100011 {%
b11 i%
b11 z%
b10100100 {%
b100 i%
b100 z%
b10100101 {%
b101 i%
b101 z%
b10100110 {%
b110 i%
b110 z%
b10100111 {%
b111 i%
b111 z%
b10101000 {%
b1000 i%
b1000 z%
b10101001 {%
b1001 i%
b1001 z%
b10101010 {%
b1010 i%
b1010 z%
b10101011 {%
b1011 i%
b1011 z%
b10101100 {%
b1100 i%
b1100 z%
b10101101 {%
b1101 i%
b1101 z%
b10101110 {%
b1110 i%
b1110 z%
b10101111 {%
b1111 i%
b1111 z%
b10110000 {%
b10000 i%
b10000 z%
b10110001 {%
b10001 i%
b10001 z%
b10110010 {%
b10010 i%
b10010 z%
b10110011 {%
b10011 i%
b10011 z%
b10110100 {%
b10100 i%
b10100 z%
b10110101 {%
b10101 i%
b10101 z%
b10110110 {%
b10110 i%
b10110 z%
b10110111 {%
b10111 i%
b10111 z%
b10111000 {%
b11000 i%
b11000 z%
b10111001 {%
b11001 i%
b11001 z%
b10111010 {%
b11010 i%
b11010 z%
b10111011 {%
b11011 i%
b11011 z%
b10111100 {%
b11100 i%
b11100 z%
b10111101 {%
b11101 i%
b11101 z%
b10111110 {%
b11110 i%
b11110 z%
b10111111 {%
b11111 i%
b11111 z%
b11000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b100 z
b101 y
b101 !!
1I!
b0 %
0#
b101 %
b0 5$
b0 6$
b101 !%
0,
1+
0*
0.
0u
b101 {
b101 ~
0r!
1q!
0p!
b101 $%
#140000
0!
0'
0f$
b0 9$
b0 :$
#145000
1!
1'
0v
b0 3$
b0 4$
1f$
1T$
0V$
b101 !$
1U$
b101 >$
b101 "!
b100 #!
b101 s
b1011 t
b1101 &
0(!
0)!
0}#
0|#
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
b0 x
0[%
1Z%
0Y%
b1011 }
b0 z
b100 )$
b0 ($
b100 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 1$
b0 2$
b100 i$
b100000 _%
b100011011001101000 !&
b10100000 {%
b10100000 }%
b11000000 ~%
b0 i%
b0 z%
b101 $$
b10100001 {%
b1 i%
b1 z%
b10100010 {%
b10 i%
b10 z%
b10100011 {%
b11 i%
b11 z%
b10100100 {%
b100 i%
b100 z%
b10100101 {%
b101 i%
b101 z%
b10100110 {%
b110 i%
b110 z%
b10100111 {%
b111 i%
b111 z%
b10101000 {%
b1000 i%
b1000 z%
b10101001 {%
b1001 i%
b1001 z%
b10101010 {%
b1010 i%
b1010 z%
b10101011 {%
b1011 i%
b1011 z%
b10101100 {%
b1100 i%
b1100 z%
b10101101 {%
b1101 i%
b1101 z%
b10101110 {%
b1110 i%
b1110 z%
b10101111 {%
b1111 i%
b1111 z%
b10110000 {%
b10000 i%
b10000 z%
b10110001 {%
b10001 i%
b10001 z%
b10110010 {%
b10010 i%
b10010 z%
b10110011 {%
b10011 i%
b10011 z%
b10110100 {%
b10100 i%
b10100 z%
b10110101 {%
b10101 i%
b10101 z%
b10110110 {%
b10110 i%
b10110 z%
b10110111 {%
b10111 i%
b10111 z%
b10111000 {%
b11000 i%
b11000 z%
b10111001 {%
b11001 i%
b11001 z%
b10111010 {%
b11010 i%
b11010 z%
b10111011 {%
b11011 i%
b11011 z%
b10111100 {%
b11100 i%
b11100 z%
b10111101 {%
b11101 i%
b11101 z%
b10111110 {%
b11110 i%
b11110 z%
b10111111 {%
b11111 i%
b11111 z%
b11000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b1 y
1m!
0l!
1k!
b1 !!
b101 )$
bx )$
bx #$
b0 ($
bx 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 ($
bx 7$
bx 8$
b0 I$
0P$
b100000 `%
0G!
b0 %
b101 %
b1011 #%
bx 5$
bx 6$
b1 !%
#150000
0!
0'
b100 9$
0f$
#155000
1!
1'
b1011 $!
b101 t
b1 "!
b101 #!
1f$
0T$
1V$
b1 !$
b1011 =$
1U$
bx 3$
bx 4$
0w
b1110 &
1)!
x}#
x|#
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
bx x
1V%
0U%
1T%
b101 )$
b0 #$
b0 ($
b101 7$
bx 8$
b0 I$
0P$
b100000 `%
b0 ($
b101 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 1$
b0 2$
b0 i$
b100000 _%
b1011 E$
b100101110101111000 !&
b0 $$
b101100000 {%
b0 i%
b0 z%
b1 $$
b101100001 {%
b1 i%
b1 z%
b101100010 {%
b10 i%
b10 z%
b101100011 {%
b11 i%
b11 z%
b101100100 {%
b100 i%
b100 z%
b101100101 {%
b101 i%
b101 z%
b101100110 {%
b110 i%
b110 z%
b101100111 {%
b111 i%
b111 z%
b101101000 {%
b1000 i%
b1000 z%
b101101001 {%
b1001 i%
b1001 z%
b101101010 {%
b1010 i%
b1010 z%
b101101011 {%
b1011 i%
b1011 z%
b101101100 {%
b1100 i%
b1100 z%
b101101101 {%
b1101 i%
b1101 z%
b101101110 {%
b1110 i%
b1110 z%
b101101111 {%
b1111 i%
b1111 z%
b101110000 {%
b10000 i%
b10000 z%
b101110001 {%
b10001 i%
b10001 z%
b101110010 {%
b10010 i%
b10010 z%
b101110011 {%
b10011 i%
b10011 z%
b101110100 {%
b10100 i%
b10100 z%
b101110101 {%
b10101 i%
b10101 z%
b101110110 {%
b10110 i%
b10110 z%
b101110111 {%
b10111 i%
b10111 z%
b101111000 {%
b11000 i%
b11000 z%
b101111001 {%
b11001 i%
b11001 z%
b101111010 {%
b11010 i%
b11010 z%
b101111011 {%
b11011 i%
b11011 z%
b101111100 {%
b11100 i%
b11100 z%
b101111101 {%
b11101 i%
b11101 z%
b101111110 {%
b11110 i%
b11110 z%
b101111111 {%
b11111 i%
b11111 z%
b110000000 {%
b100000 i%
b0 S&
b0 U&
b1 U&
b10 U&
b11 U&
b100 U&
b101 U&
b110 U&
b111 U&
b1000 U&
b111 U&
b110 U&
b101 U&
b100 U&
b11 U&
b10 U&
b1 U&
b0 U&
b11111111111111111111111111111111 U&
b1 S&
0U$
b101 z
b101 }
0|
b110 y
0m!
1l!
0k!
0t!
b110 !!
0I!
1H!
1G!
b0 %
0{$
b101 #%
b101 5$
b0 6$
b110 !%
0-
0+
b0 {
b0 ~
0s!
0q!
b0 $%
#160000
0!
0'
0f$
b101 9$
#165000
1!
1'
b0 s
b0 &!
b101 3$
b0 4$
1f$
1T$
0V$
0O$
b110 !$
b101 =$
1U$
b0 >$
b110 "!
b1 #!
b101 $!
b1011 %!
b1111 &
0)!
0}#
0|#
16"
05"
14"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
1i!
0h!
1g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
b101 x
0\%
0Z%
0V%
1U%
0T%
b0 )$
b0 ($
b0 7$
b0 8$
b0 I$
0P$
b100000 `%
b0 5$
#170000
0!
0'
b0 9$
0f$
#175000
1!
1'
b101 %!
b110 #!
1f$
0T$
0U$
b0 3$
b0 '!
b0 t
b10000 &
06"
04"
0i!
0g!
b0 x
b0 }
b0 z
b1 y
0n!
0l!
b1 !!
1I!
0H!
0G!
b0 #%
b1 !%
#180000
0!
0'
0f$
#185000
1!
1'
1f$
1T$
b1 !$
b0 =$
1U$
b1 "!
b0 $!
b10001 &
0W%
0U%
#190000
0!
0'
0f$
#195000
1!
1'
b0 %!
b1 #!
1f$
0T$
0U$
b10010 &
#200000
0!
0'
0f$
#205000
1!
1'
1f$
1T$
1U$
b10011 &
#210000
0!
0'
0f$
#215000
1!
1'
1f$
0T$
0U$
b10100 &
#220000
0!
0'
0f$
